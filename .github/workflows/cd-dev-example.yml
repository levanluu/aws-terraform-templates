name: Terraform deploy DEV

on:
  push:
    branches: [dev]

env:
  TF_WORKSPACE: ${{ github.head_ref || github.ref_name }}
  TF_VAR_db_name: ${{ vars.DEV_DB_NAME }}
  TF_VAR_instance_class: ${{ vars.DEV_INSTANCE_CLASS }}
  TF_VAR_username: ${{ vars.DEV_DB_USERNAME }}
  TF_VAR_password: ${{ vars.DEV_DB_PASSWORD }}
  TF_VAR_allocated_storage: 20
  TF_VAR_env_api_key: ${{ vars.DEV_API_KEY }}
  TF_VAR_monitoring_slack_webhook_url: ${{ vars.MONITORING_SLACK_WEBHOOK_URL }}
jobs:
  dev-deploy:
    name: Running DEV deploy
    permissions:
      contents: read
      id-token: write
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-oidc-provider-aws

      - name: Terraform Init
        run: cd terraform && terraform init

      - name: Terraform Plan
        run: cd terraform && terraform plan --var-file="dev.tfvars"

      - name: Terraform Apply
        run: cd terraform && terraform apply --var-file="dev.tfvars" -auto-approve -input=false
